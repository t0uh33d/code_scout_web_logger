name: Build and Release Windows App

on:
  push:
    tags:
      - "v*.*.*" # Trigger the workflow on version tags

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.0"

      # Windows-specific steps for setting up SSH and SSH-Agent
      - name: Setup custom SSH (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "${{ secrets.GIT_SSH_KEY }}" | Out-File -Encoding ascii -FilePath ssh_key
          mkdir -Force $env:USERPROFILE\.ssh
          Set-Content -Path "$env:USERPROFILE\.ssh\config" -Value @"
          Host gitlab.com-codewave
              HostName gitlab.com
              User t0uh33d
              IdentityFile ${{ github.workspace }}\ssh_key
              StrictHostKeyChecking no
          "@
          ssh-keyscan -t rsa gitlab.com >> $env:USERPROFILE\.ssh\known_hosts
          chmod 600 ssh_key
        shell: powershell

      - name: Install dependencies
        run: flutter pub get

      - name: Build Windows release
        run: flutter build windows --release

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: flutter-windows-build
          path: build/windows/runner/Release/

  release:
    needs: build
    runs-on: windows-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: flutter-windows-build
          path: build/windows/runner/Release/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Windows build to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/windows/runner/Release/code_scount_web_logger.exe
          asset_name: code_scount_web_logger.exe
          asset_content_type: application/octet-stream
